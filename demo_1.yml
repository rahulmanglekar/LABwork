---
- name: VMware Object Creation
  hosts: localhost
  gather_facts: False
  vars_files:
    - vcenter_vars.yml
  tasks:
    - name: Create a datacenter "{{ datacenter }}"
      vmware_datacenter:
        validate_certs: no
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        datacenter_name: "{{ datacenter }}"
        state: present
      register: datacenter_result

    - name: Check if datacenter "{{ datacenter }}" is created
      assert:
        that:
          - "datacenter_result.changed"

    - name: Create a cluster "{{ cluster }}"
      vmware_cluster:
        validate_certs: no
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        datacenter_name: "{{ datacenter }}"
        cluster_name: "{{ cluster }}"
        enable_ha: no
        enable_drs: yes
        enable_vsan: no
        state: present
      register: cluster_result

    - name: Check if cluster is created
      assert:
        that:
          - "cluster_result.changed"

    - name: Add existing ESXi "{{ esxi_hostname }}"
      vmware_host:
        validate_certs: no
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        datacenter_name: "{{ datacenter }}"
        cluster_name: "{{ cluster }}"
        esxi_hostname: "{{ esxi_hostname }}"
        esxi_username: "{{ esxi_username }}"
        esxi_password: "{{ esxi_password }}"
        state: present
      register: host_result

    - name: Check if host "{{ esxi_hostname }}" is added
      assert:
        that:
          - "host_result.changed"

    - name: Exit ESXi "{{ esxi_hostname }}" from maintenance mode
      vmware_maintenancemode:
        validate_certs: no
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        esxi_hostname: "{{ esxi_hostname }}"
        state: absent
      register: host_result

    - name: Check if host "{{ esxi_hostname }}" is exited from maintenance mode
      assert:
        that:
          - "host_result.changed"

    - name: Finish
      debug:
        msg: "Done"
